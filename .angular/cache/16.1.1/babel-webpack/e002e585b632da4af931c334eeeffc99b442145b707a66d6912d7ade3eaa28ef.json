{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.signUpUsers = [];\n    this.loginObj = {\n      username: '',\n      password: ''\n    };\n  }\n  ngOnInit() {\n    const localData = localStorage.getItem('signUpUsers');\n    if (localData) {\n      this.signUpUsers = JSON.parse(localData);\n    }\n  }\n  onLogin() {\n    const userExist = this.signUpUsers.find(user => user.username === this.loginObj.username && user.password === this.loginObj.password);\n    if (userExist != undefined) {\n      alert('Login Success');\n    } else {\n      alert('Login Failed');\n    }\n  }\n  onCancel() {\n    const form = document.querySelector('.login-form');\n    form.reset();\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","router","signUpUsers","loginObj","username","password","ngOnInit","localData","localStorage","getItem","JSON","parse","onLogin","userExist","find","user","undefined","alert","onCancel","form","document","querySelector","reset","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/pedro/angular/login-page/src/app/login/login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit{\n  signUpUsers: any[] = [];\n\n  loginObj: any = {\n    username: '',\n    password: ''\n  };\n\n  constructor(private router: ) { }\n\n  ngOnInit(): void {\n    const localData = localStorage.getItem('signUpUsers');\n    if (localData) {\n      this.signUpUsers = JSON.parse(localData);\n    }\n  }\n\n  onLogin() {\n    const userExist = this.signUpUsers.find(user => user.username === this.loginObj.username && user.password === this.loginObj.password);\n    if (userExist != undefined) {\n      alert('Login Success');\n    }\n    else {\n      alert('Login Failed');\n    }\n  }\n\n  onCancel() {\n    const form = document.querySelector('.login-form') as HTMLFormElement;\n    form.reset();\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAQzBC,YAAoBC,MAAO;IAAP,KAAAA,MAAM,GAANA,MAAM;IAP1B,KAAAC,WAAW,GAAU,EAAE;IAEvB,KAAAC,QAAQ,GAAQ;MACdC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;KACX;EAE+B;EAEhCC,QAAQA,CAAA;IACN,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACrD,IAAIF,SAAS,EAAE;MACb,IAAI,CAACL,WAAW,GAAGQ,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC;;EAE5C;EAEAK,OAAOA,CAAA;IACL,MAAMC,SAAS,GAAG,IAAI,CAACX,WAAW,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACX,QAAQ,KAAK,IAAI,CAACD,QAAQ,CAACC,QAAQ,IAAIW,IAAI,CAACV,QAAQ,KAAK,IAAI,CAACF,QAAQ,CAACE,QAAQ,CAAC;IACrI,IAAIQ,SAAS,IAAIG,SAAS,EAAE;MAC1BC,KAAK,CAAC,eAAe,CAAC;KACvB,MACI;MACHA,KAAK,CAAC,cAAc,CAAC;;EAEzB;EAEAC,QAAQA,CAAA;IACN,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAoB;IACrEF,IAAI,CAACG,KAAK,EAAE;EACd;CACD;AA/BYvB,cAAc,GAAAwB,UAAA,EAN1BzB,SAAS,CAAC;EACT0B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EAEW3B,cAAc,CA+B1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}